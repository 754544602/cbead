var datesTable = {
	dates: '',
	year: '',
	month: '',
	days: '',
	addtable: function() {

	},
	classajax: function() {
		$.ajax({
			type: "post",
			url: $yt_option.base_path + "project/getShiftPlan",
			async: true,
			data: {
				classMonth: $("#txtDate").val()
			},
			before: function() {

			},
			success: function(data) {
				$yt_baseElement.hideLoading();
				console.log(data.data);
				this.dates = $("#txtDate").val().split('-');
				this.year = datesTable.dates[0];
				this.month = datesTable.dates[1];
				this.days = new Date(datesTable.year, datesTable.month, 0);
				this.days = this.days.getDate();
				$('.plan-table thead tr').empty();
				$('.plan-table tbody').empty();
				$('.plan-table thead tr').append("<th>培训主题</th>");
				for(let i = 0; i < data.data.length; i++) {
					$('.plan-table tbody').append('<tr><td>' + data.data[i].projectName + '</td></tr>'); //渲染培训主题
				}
				for(let i = 0; i < this.days; i++) {
					$('.plan-table tbody tr').append("<td class='state-day'></td>"); //渲染当月天数
				};
				setDayList(new Date($("#txtDate").val()));
				var num = 0;
				$.each(data.data, function(i, n) {
					for(let j = 0; j < $('thead tr .state-day').length; j++) {
						if(n.startDate == $('thead tr .state-day').eq(j).attr('currentday')) {

							$('tbody tr').eq(i).children('.state-day').eq(j).addClass('start-state')

						}
						if(n.endDate == $('thead tr .state-day').eq(j).attr('currentday')) {
							$('tbody tr').eq(i).children('.state-day').eq(j).addClass('end-state');
						}

					}
					for(let k = $('tbody tr').eq(i).children('.start-state').index() - 1; k < $('tbody tr').eq(i).children('.end-state').index(); k++) {
						if(n.projectStates == '1') {
							$('tbody tr').eq(i).children('.state-day').eq(k).addClass('sub-use');
						} else if(n.projectStates == '2') {
							$('tbody tr').eq(i).children('.state-day').eq(k).addClass('all-use');
						} else if(n.projectStates == '3') {
							$('tbody tr').eq(i).children('.state-day').eq(k).addClass('no-use');
						} else if(n.projectStates == '4') {
							$('tbody tr').eq(i).children('.state-day').eq(k).addClass('alr-use');
						}
					}
					//hover
					//日子选中状态
					$('.plan-table th.state-day').hover(function() {
						th = this;
						$.each($('tbody tr'), function(j, m) {
							$(this).children('.state-day').eq($(th).index() - 1).css('background-color', '#f2f9ff');
//							if($(this).children('.state-day').eq($(th).index() - 1).hasClass('sub-use')||$(this).children('.state-day').eq($(th).index() - 1).hasClass('all-use')||$(this).children('.state-day').eq($(th).index() - 1).hasClass('no-use')||$(this).children('.state-day').eq($(th).index() - 1).hasClass('alr-use')){
//								num+= n.trainDateCount;
//								console.log(num);
//							}
						});
					}, function() {
						$.each($('tbody tr'), function(j, m) {
							$(this).children('.state-day').eq($(th).index() - 1).css('background', 'none')
						});
					});
				});

			}
		});
	}
}

function dateinit() {
	$("#txtDate").calendar({
		speed: 200, //日期列表展开显示速度, 参数"slow","normal","fast"，或毫秒数值，默认：200     
		complement: true, // 是否显示日期或年空白处的前后月的补充,默认：true     
		readonly: true, // 目标对象是否设为只读，默认：true     
		lowerLimit: "2010/01/01", // 日期下限，默认：NaN(不限制)     
		nowData: true, //默认选中当前时间,默认true  
		dateFmt: "yyyy-MM",
		callback: function() { // 点击选择日期后的回调函数  
			//        alert("您选择的日期是：" + $("#txtDate").val());  
			setDayList(new Date($("#txtDate").val()));
			datesTable.classajax();
		}
	});
}
$(document).ready(function() {

	//月份选择
	$yt_baseElement.showLoading();
	$(".plan-table caption div.right span").click(function() {
		var currentData = $("#txtDate").val();
		if($(this).index() == 0) {
			currentData = getPreMonth(currentData);
		} else if($(this).index() == 1) {
			currentData = new Date();
			var y = new Date().getFullYear(); //年
			var m = new Date().getMonth() + 1; //月
			var day = new Date().getDate(); //日
			currentData = y + "-" + (m < 10 ? "0" + m : m);
		} else {
			currentData = getNextMonth(currentData);
		}
		//初始化数据

		$("#txtDate").val(currentData);
		setDayList(new Date($("#txtDate").val()));
		datesTable.classajax();
	});

	dateinit();
	datesTable.classajax();
});
/** 
 * 调用分页方法 
 * $('页面分页区域自定义的类名或ID'); 
 */
//$('.table-page1').pageInfo({
//	pageIndex: 1,
//	pageNum: 15, //每页显示条数  
//	pageSize: 10, //显示...的规律  
//	total: 100 //总数量  
//});

function setDayList(currentDate) {
	//获取时间
	//var currentDate = new Date();
	currentDate.setDate(1);
	var year = currentDate.getFullYear();

	var month = currentDate.getMonth() + 1;
	var d = new Date(year, month, 0);
	$(".occupy-list .state-day").remove();
	var y, m, day, th;
	for(var i = 0; i < d.getDate(); i++) {

		if(i > 0) {
			currentDate = new Date(currentDate.getTime() + 24 * 60 * 60 * 1000);
		}
		y = currentDate.getFullYear(); //年
		m = currentDate.getMonth() + 1; //月
		day = currentDate.getDate(); //日
		currentdayStr = y + "-" + (m < 10 ? "0" + m : m) + "-" + (day < 10 ? "0" + day : day);
		th = $('<th class="state-day" currentday="' + currentdayStr + '"><div>' + currentDate.getDate() + '</div></th>');
		if(currentDate.getDay() == 0) {
			th.addClass("sun-head");
		} else if(currentDate.getDay() == 6) {
			th.addClass("sat-head");
		}
		$(".occupy-list tr").append(th);
	}
}

function getPreMonth(date) {
	var arr = date.split('-');
	var year = arr[0]; //获取当前日期的年份
	var month = arr[1]; //获取当前日期的月份
	var day = arr[2]; //获取当前日期的日
	var days = new Date(year, month, 0);
	days = days.getDate(); //获取当前日期中月的天数
	var year2 = year;
	var month2 = parseInt(month) - 1;
	if(month2 == 0) {
		year2 = parseInt(year2) - 1;
		month2 = 12;
	}
	var day2 = day;
	var days2 = new Date(year2, month2, 0);
	days2 = days2.getDate();
	if(day2 > days2) {
		day2 = days2;
	}
	if(month2 < 10) {
		month2 = '0' + month2;
	}
	var t2 = year2 + '-' + month2;
	return t2;
}

/**
 * 获取下一个月
 *
 * @date 格式为yyyy-mm-dd的日期，如：2014-01-25
 */
function getNextMonth(date) {
	var arr = date.split('-');
	var year = arr[0]; //获取当前日期的年份
	var month = arr[1]; //获取当前日期的月份
	var day = arr[2]; //获取当前日期的日
	var days = new Date(year, month, 0);
	days = days.getDate(); //获取当前日期中的月的天数
	var year2 = year;
	var month2 = parseInt(month) + 1;
	if(month2 == 13) {
		year2 = parseInt(year2) + 1;
		month2 = 1;
	}
	var day2 = day;
	var days2 = new Date(year2, month2, 0);
	days2 = days2.getDate();
	if(day2 > days2) {
		day2 = days2;
	}
	if(month2 < 10) {
		month2 = '0' + month2;
	}

	var t2 = year2 + '-' + month2;
	return t2;
}